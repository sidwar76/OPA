name: Docker CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: signedcontainer

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: debug
        run: ${{ secrets.COSIGN_PASSWORD }} > test.txt
      - name: debug2
        run: cat test.txt

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}
      
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.0.0
        
      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          
      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect
        
      - name: Decrypt the private key
        env:
          COSIGN_PASSPHRASE: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_PASSWORD }}" | openssl rsa -in cosign.key -out cosign.key.decrypted -passin stdin
        shell: bash


      
      - name: Sign the published Docker image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}

