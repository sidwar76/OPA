name: sample Pipeline

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  check_dockerfile:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Replace 'x' with the desired Python version (e.g., 3.8)

      - name: Install dockerfile2json
        run: pip install dockerfile2json

      # Convert Dockerfile to JSON format
      - name: Convert Dockerfile to JSON
        run: dockerfile2json ./Dockerfile > Dockerfile.json

      - name: Run Dockerfile checker
        run: |
          python dockerfile_checker.py > policy_report.txt
          
      # Publish the policy_report.txt as an artifact
      - name: Publish Policy Report
        uses: actions/upload-artifact@v2
        with:
          name: policy-report
          path: ./policy_report.txt

  build_and_scan:
    name: Build, Sign & Push Docker Image
    runs-on: ubuntu-latest
    needs: check_dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GPG keys
        run: |
          # Read the private key from the file
          cat private_key.asc | gpg --import -
        working-directory: ${{ github.workspace }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          # Build the Docker image with multi-platform support and tag with GitHub SHA
          docker build -t sidwar/myapp:${{ github.sha }} .
        env:
          # Set environment variables for the Docker build command
          DOCKER_BUILDKIT: 1

      - name: Sign Docker image
        run: |
          # Sign the Docker image with Docker Content Trust
          docker push --sign-by 37800B1CA821E8DBA0E02C6609A3E699F359FC6B sidwar/myapp:${{ github.sha }}
        env:
          # Set environment variables for Docker Content Trust
          DOCKER_CONTENT_TRUST: 1

      - name: Verify Signed Image
        run: |
          # Verify the signature of the Docker image
          docker trust inspect sidwar/myapp:${{ github.sha }}

      - name: Push Docker image
        run: |
          # Push the signed Docker image to Docker Hub
          docker push sidwar/myapp:${{ github.sha }}

  verify_signed_image:
    name: Verify Signed Image
    runs-on: ubuntu-latest
    needs: build_and_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set DOCKER_CONTENT_TRUST environment variable
        run: |
          echo "DOCKER_CONTENT_TRUST=1" >> $GITHUB_ENV

      - name: Pull Docker Image
        run: |
          # Pull the Docker image from Docker Hub
          docker pull sidwar/myapp:latest
          
      - name: Verify Signature
        run: |
          docker images
          # Check the signature information of the Docker image
          docker inspect sidwar/myapp:latest | jq '.[0].RepoDigests'



          
  vulnerability_scan:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Vulnerability Scanning
        run: |
          # Use Trivy for vulnerability scanning and capture the output in trivy-report.json
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/root/ aquasec/trivy:latest image --vuln-type="os,library" sidwar/myapp:${{ github.sha }} > trivy-report.json
        # Publish the vulnerability scanning report as an artifact
      - name: Publish Vulnerability Scanning Report
        uses: actions/upload-artifact@v2
        with:
          name: vulnerability-report
          path: ./trivy-report.json
