name: DevSecOps Pipeline

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  check_dockerfile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' 

      - name: Install dockerfile2json
        run: pip install dockerfile2json

      - name: Convert Dockerfile to JSON
        run: dockerfile2json ./Dockerfile > Dockerfile.json

      - name: Run Dockerfile checker
        run: |
          python dockerfile_checker.py > policy_report.txt
          cat Dockerfile.json
          
      - name: Publish Policy Report
        uses: actions/upload-artifact@v2
        with:
          name: policy-report
          path: ./policy_report.txt

  push_to_registry:
    name: Build, Sign & Push
    runs-on: ubuntu-latest
    needs: check_dockerfile
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Install cosign
        run: |
          curl -L https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o /tmp/cosign
          chmod +x /tmp/cosign
          sudo mv /tmp/cosign /usr/local/bin/cosign

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t sidwar/myapp:latest .

      - name: Sign and push docker image
        uses: sudo-bot/action-docker-sign@latest
        with:
          image-ref: "sidwar/myapp:latest"
          private-key-id: "${{ secrets.DOCKER_PRIVATE_KEY_ID }}"
          private-key: ${{ secrets.DOCKER_PRIVATE_KEY }}
          private-key-passphrase: ${{ secrets.COMMON_PASSPHRASE }}

  verify_image:
    runs-on: ubuntu-latest
    name: Inspect signature 
    needs: push_to_registry
    steps:
    - name: Verify Docker signature
      run: docker trust inspect --pretty sidwar/myapp:latest
          
  vulnerability_scan:
    name: Vulnerability Scanning
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Vulnerability Scanning
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/root/ aquasec/trivy:latest image sidwar/myapp:${{ github.sha }} > trivy-report.json

      - name: Publish Vulnerability Scanning Report
        uses: actions/upload-artifact@v2
        with:
          name: vulnerability-report
          path: ./trivy-report.json

  optimize_image:
    name: Optimize Docker Image
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install DockerSlim
        run: |
          curl -s https://api.github.com/repos/docker-slim/docker-slim/releases/latest \
          | grep "browser_download_url.*docker-slim_linux_x64.tar.gz" \
          | cut -d : -f 2,3 \
          | tr -d \" \
          | wget -qi - -O /tmp/docker-slim.tar.gz
          file /tmp/docker-slim.tar.gz
          tar xvf /tmp/docker-slim.tar.gz -C /tmp
          sudo mv /tmp/docker-slim /usr/local/bin

      - name: Optimize Docker image
        run: |
          docker pull sidwar/myapp:latest
          docker-slim build --http-probe=false sidwar/myapp:latest
          docker tag sidwar/myapp.slim:latest sidwar/myapp:slim
          docker push sidwar/myapp:slim
